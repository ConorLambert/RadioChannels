@model RadioChannels.Models.User

<link href="~/Content/stylesheets/forms.css" rel="stylesheet" />

@{
    ViewBag.Title = "Log In";
}
<h2 id="main-heading">Log In</h2>

@Html.ValidationSummary(true)
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "login-form" }))
{
    <ul class="form-style-1">   
        <li>
            <label>@Html.DisplayNameFor(model => model.Email)<span class="required">*</span></label>
            <!-- <input type="email" name="field3" class="field-long" /> -->
            @Html.TextBoxFor(model => model.Email, new { @class = "field-long validate", name="field1", type="email" })
        </li>
        <li>
            <label>Password<span class="required">*</span></label>           
            @Html.PasswordFor(model => model.PasswordHash, new { @class = "field-long validate", id = "password", name = "password1" })                         
        </li>        
        <li>
            <input id="submit" type="submit" value="Log In" />
            <span class="change-log-in">Don't have an account? <a onclick="page_ajax_request('/Account/Register', ActionOnReady);">Register</a></span>
        </li>  
        @* Enable this once you have account confirmation enabled for password reset functionality *@
        <li>
            <p>
                @Html.ActionLink("Forgot your password?", "ForgotPassword")
            </p>
        </li>
        <li class="form-line"></li>
        <li class="logos-placeholder">  
            <span>Or Log In Using </span>          
            <a class="icon-google-plus external-logos" href="@Url.Action("LoginExternal", "Account", new { provider = "Google"})"></a>
            <a class="icon-facebook-sign external-logos" href="@Url.Action("LoginExternal", "Account", new { provider = "Facebook"})"></a>            
        </li>      
    </ul>
}
<script>
    if (!window.location.href.includes("login"))  // if we have moved back to this page then, dont push it
        history.pushState("login", null, "#login");
</script>
